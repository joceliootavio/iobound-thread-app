version: '3.8'
services:
  postgres:
    image: postgres:latest # Usa a versão mais recente do PostgreSQL
    container_name: postgres_container
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: performance_test
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d # Mapeia o volume para scripts de inicialização

  k6:
    image: grafana/k6:latest # Usa a imagem oficial do k6
    container_name: k6_container
    entrypoint: ["k6", "run", "/scripts/test.js"] # Define o comando de execução do k6
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
      - BASE_URL=http://java-app:8080/api/v1/customers/123?suspended=false
      - DURATION=120s
      - VUS=4
      - RPS=600
    volumes:
      - ./k6-scripts:/scripts # Mapeia o volume para os scripts de teste
    depends_on:
      - influxdb # Garante que o serviço do InfluxDB esteja disponível antes de executar o k6

  java-app:
    image: openjdk:21-jdk # Usa a imagem oficial do OpenJDK 21
    container_name: java_app_container
    environment:
      JDBC_URL: "postgres_container" # Configura a memória máxima e mínima para 2 GB
      VIRTUAL_THREADS: "false"
    command: ["java", "-jar", "/app/iobound-thread-app-0.0.1-SNAPSHOT.jar"] # Comando para rodar a aplicação
    volumes:
      - ./target:/app # Mapeia o volume para a aplicação
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: "1.0" # Limita o uso de CPU a 1 core
          memory: "2g" # Limita o uso de memória a 2 GB
    depends_on:
      - postgres

  influxdb:
    image: influxdb:1.11.8 # Usa a imagem oficial do InfluxDB
    container_name: influxdb_container
    environment:
      INFLUXDB_DB: k6 # Nome do banco de dados para o k6
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin123
    ports:
      - "8086:8086" # Porta padrão do InfluxDB
    volumes:
      - influxdb-data:/var/lib/influxdb # Volume para persistência de dados

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Configuração do Prometheus
    ports:
      - "9090:9090" # Porta padrão do Prometheus

  grafana:
    image: grafana/grafana:latest # Usa a imagem oficial do Grafana
    container_name: grafana_container
    environment:
      - GF_SECURITY_ADMIN_USER=admin # Usuário padrão do Grafana
      - GF_SECURITY_ADMIN_PASSWORD=admin123 # Senha padrão do Grafana
    ports:
      - "3000:3000" # Porta padrão do Grafana
    volumes:
      - grafana-data:/var/lib/grafana # Volume para persistência de dados
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./provisioning:/etc/grafana/provisioning # Volume para provisionamento
    depends_on:
      - influxdb
      - prometheus

volumes:
  influxdb-data:
  grafana-data: